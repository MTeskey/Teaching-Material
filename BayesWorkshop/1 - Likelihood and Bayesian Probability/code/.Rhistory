# Computes and plots the log/likelihood function for a binomial experiment
# Number of coin flips
N = 4
# Number of heads
k = 3
### LIKELIHOOD ###
lik = function(p) choose(N,k) * p^k * (1-p)^(N-k)
# Plot
x = seq(from = 0, to = 1, length.out = 100)
plot(x, lik(x), xlim = c(0,1),
type = 'l', lwd = 2,
xlab = 'p', ylab = 'Likelihood',
main = 'Binomial Likelihood')
grid(nx = NULL, ny = NULL)
# Indicate maximum likelihood estimate
abline(v = k/N, lty = 2, lwd = 2, col = 'red')
# Computes and plots the likelihood and posterior distributions
# for a binomial parameter p for a specified beta prior
# Number of coin flips
N = 4
# Number of heads
k = 3
# Normalized likelihood
lik = function(p){
p^k * (1-p)^(N-k) * (factorial(N+1)/(factorial(k)*factorial(N-k)))
}
# Beta prior parameters
alpha = 20
beta = 20
# Plot
x = seq(from = 0, to = 1, length.out = 100)
y_max = max(c(dbeta(x, alpha, beta),
lik(x),
dbeta(x, alpha + k, beta + N - k)))
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '',
main = 'Bayesian Binomial Model')
grid(nx = NULL, ny = NULL)
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
abline(v = k/N, lty = 2, lwd = 3, col = 'black')
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
abline(v = alpha/(alpha+beta), lty = 2, lwd = 3, col = 'red')
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '',
main = 'Bayesian Binomial Model')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
abline(v = alpha/(alpha+beta), lty = 2, lwd = 3, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
abline(v = k/N, lty = 2, lwd = 3, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
abline(v = (alpha + k)/(alpha + beta + N), lty = 2, lwd = 3, col = 'red')
# Computes and plots the likelihood and posterior distributions
# for a binomial parameter p for a specified beta prior
# Number of coin flips
N = 4
# Number of heads
k = 3
# Normalized likelihood
lik = function(p){
p^k * (1-p)^(N-k) * (factorial(N+1)/(factorial(k)*factorial(N-k)))
}
# Beta prior parameters
alpha = 20
beta = 20
# Plot
x = seq(from = 0, to = 1, length.out = 100)
y_max = max(c(dbeta(x, alpha, beta),
lik(x),
dbeta(x, alpha + k, beta + N - k)))
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '',
main = 'Bayesian Binomial Model')
grid(nx = NULL, ny = NULL)
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
abline(v = k/N, lty = 2, lwd = 3, col = 'black')
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
abline(v = alpha/(alpha+beta), lty = 2, lwd = 3, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
abline(v = k/N, lty = 2, lwd = 3, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
abline(v = (alpha + k)/(alpha + beta + N), lty = 2, lwd = 3, col = 'red')
legend(x = 0, y = y_max,
col = c('blue', 'black', 'red'),
legend = c('Prior', 'likelihood', 'Posterior'))
legend(x = 0, y = y_max,
fill = c('blue', 'black', 'red'),
legend = c('Prior', 'likelihood', 'Posterior'))
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
legend(x = 0, y = y_max,
fill = c('blue', 'black', 'red'),
legend = c('Prior', 'Likelihood', 'Posterior'))
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
legend(x = 0, y = y_max,
fill = c('blue', 'black', 'red'),
legend = c('Prior', 'Likelihood', 'Posterior'))
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
legend(x = 0, y = y_max,
fill = c('blue', 'black', 'red'),
legend = c('Prior', 'Likelihood', 'Posterior'))
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
legend(x = 0, y = y_max,
fill = c('blue', 'black', 'red'),
legend = c('Prior', 'Likelihood   ', 'Posterior'))
plot(0,
xlim = c(0,1), ylim = c(0, y_max),
type = 'l', lwd = 2,
xlab = 'p', ylab = '')
grid(nx = NULL, ny = NULL)
# Plot prior
lines(x, dbeta(x, alpha, beta),
lty = 2, lwd = 2, col = 'blue')
# Plot likelihood
lines(x, lik(x),
lty = 1, lwd = 2, col = 'black')
# Plot posterior
lines(x, dbeta(x, alpha + k, beta + N - k),
lty = 2, lwd = 2, col = 'red')
legend(x = 0, y = y_max,
fill = c('blue', 'black', 'red'),
legend = c('Prior', 'Likelihood      ', 'Posterior'))
